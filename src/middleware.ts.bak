import { createMiddlewareClient } from '@supabase/auth-helpers-nextjs'
import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

export async function middleware(req: NextRequest) {
  const res = NextResponse.next()
  
  // Skip middleware for auth pages to avoid infinite loops
  if (req.nextUrl.pathname.startsWith('/auth/')) {
    return res
  }

  try {
    const supabase = createMiddlewareClient({ req, res })
    
    const {
      data: { session },
    } = await supabase.auth.getSession()

    // If user is not signed in, redirect to signin
    if (!session && req.nextUrl.pathname === '/') {
      return NextResponse.redirect(new URL('/auth/signin', req.url))
    }

    return res
  } catch (error) {
    // If there's an error, allow the request to continue
    console.error('Middleware error:', error)
    return res
  }
}

export const config = {
  matcher: ['/((?!api|_next/static|_next/image|favicon.ico).*)'],
} 